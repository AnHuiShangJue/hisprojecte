<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ahsj.hiscore.dao.HisProjectMapper">

    <resultMap id="BaseResultMap" type="com.ahsj.hiscore.entity.HisProject">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="create_user_id" jdbcType="BIGINT" property="createUserId"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="update_user_id" jdbcType="BIGINT" property="updateUserId"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="description" jdbcType="VARCHAR" property="description"/>
        <result column="type" jdbcType="SMALLINT" property="type"/>
        <result column="price" jdbcType="DECIMAL" property="price"/>
        <result column="number" jdbcType="VARCHAR" property="number"/>
        <result column="pinyin_code" jdbcType="VARCHAR" property="pinyinCode"/>
        <result column="unit" jdbcType="VARCHAR" property="unit"/>
        <result column="department_id" jdbcType="BIGINT" property="departmentId"/>
        <result column="is_enable" jdbcType="INTEGER" property="isEnable"/>
        <result column="num" jdbcType="INTEGER" property="num"/>
        <result column="dept_name" property="deptName"/>
        <result column="combination_name" property="combinationName"/>
        <result column="combination_number" property="combinationNumber"/>
        <result column="his_project_order_num" property="hisProjectOrderNum"/>
        <result column="his_project_num" property="hisProjectNum"/>
        <result column="combination_id" property="combinationId"/>
        <result column="inspection_id" property="inspectionId"/>
        <result column="project_id" property="projectId"/>
        <result column="assit_type_name" property="assitTypeName"/>
        <result column="sys_code_id" property="sysCodeId"/>
        <result column="translate_Khmer" property="translateKhmer"/>
        <result column="chinese_english_name" property="chineseEnglishName"/>
        <result column="his_project_num" property="hisProjectNum" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, create_date, create_user_id, update_date, update_user_id, name, description,
        type, price, number, pinyin_code, unit, department_id, is_enable,num
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">

        select
        <include refid="Base_Column_List"/>
        from his_project
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from his_project
        where id = #{id,jdbcType=BIGINT}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ahsj.hiscore.entity.HisProject">

        insert into his_project (id, create_date, create_user_id,
                                 update_date, update_user_id, name,
                                 description, type, price,
                                 number, pinyin_code, unit,
                                 department_id, is_enable,num)
        values (#{id,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT},
                #{updateDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR},
                #{description,jdbcType=VARCHAR}, #{type,jdbcType=SMALLINT}, #{price,jdbcType=DECIMAL},
                #{number,jdbcType=VARCHAR}, #{pinyinCode,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR},
                #{departmentId,jdbcType=BIGINT}, #{isEnable,jdbcType=INTEGER}, #{num,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.ahsj.hiscore.entity.HisProject" useGeneratedKeys="true"
            keyProperty="id">

        insert into his_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="description != null">
                description,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="price != null">
                price,
            </if>
            <if test="number != null">
                number,
            </if>
            <if test="pinyinCode != null">
                pinyin_code,
            </if>
            <if test="unit != null">
                unit,
            </if>
            <if test="departmentId != null">
                department_id,
            </if>
            <if test="isEnable != null">
                is_enable,
            </if>
            <if test="num != null">
                num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=SMALLINT},
            </if>
            <if test="price != null">
                #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                #{number,jdbcType=VARCHAR},
            </if>
            <if test="pinyinCode != null">
                #{pinyinCode,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="isEnable != null">
                #{isEnable,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                #{num,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.hiscore.entity.HisProject">
        update his_project
        <set>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="description != null">
                description = #{description,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=SMALLINT},
            </if>
            <if test="price != null">
                price = #{price,jdbcType=DECIMAL},
            </if>
            <if test="number != null">
                number = #{number,jdbcType=VARCHAR},
            </if>
            <if test="pinyinCode != null">
                pinyin_code = #{pinyinCode,jdbcType=VARCHAR},
            </if>
            <if test="unit != null">
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="departmentId != null">
                department_id = #{departmentId,jdbcType=BIGINT},
            </if>
            <if test="isEnable != null">
                is_enable = #{isEnable,jdbcType=INTEGER},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ahsj.hiscore.entity.HisProject">
        update his_project
        set create_date = #{createDate,jdbcType=TIMESTAMP},
            create_user_id = #{createUserId,jdbcType=BIGINT},
            update_date = #{updateDate,jdbcType=TIMESTAMP},
            update_user_id = #{updateUserId,jdbcType=BIGINT},
            name = #{name,jdbcType=VARCHAR},
            description = #{description,jdbcType=VARCHAR},
            type = #{type,jdbcType=SMALLINT},
            price = #{price,jdbcType=DECIMAL},
            number = #{number,jdbcType=VARCHAR},
            pinyin_code = #{pinyinCode,jdbcType=VARCHAR},
            unit = #{unit,jdbcType=VARCHAR},
            department_id = #{departmentId,jdbcType=BIGINT},
            is_enable = #{isEnable,jdbcType=INTEGER},
            num = #{num,jdbcType=INTEGER},
            where id = #{id,jdbcType=BIGINT}
    </update>


    <!--自定义SQL-->

    <select id="queryList" resultMap="BaseResultMap" parameterType="core.entity.PageBean">
        select
        p.* ,o.name as dept_name , t.translate_Khmer as translate_Khmer ,CONCAT(p.name,'(',t.translate_Khmer,')') as chinese_english_name
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id left join `his-translate`.translate t
        on p.id =  t.translate_id WHERE t.translate_type = '10004' and t.translate_column = 'name'

        <if test="parameter.name != null and parameter.name != ''">
            and p.name like concat('%', #{parameter.name,jdbcType=INTEGER},'%')
        </if>
        <if test="parameter.number != null and parameter.number != ''">
            and p.number = #{parameter.number,jdbcType=VARCHAR}
        </if>
        <if test="parameter.pinyinCode != null and parameter.pinyinCode != ''">
            and p.pinyin_code like concat('%', #{parameter.pinyinCode,jdbcType=INTEGER},'%')
        </if>
        <if test="parameter.type != null and parameter.type != ''">
            and p.type = #{parameter.type,jdbcType=INTEGER}
        </if>
        <if test="parameter.departmentId != null and parameter.departmentId != ''">
            and p.department_Id = #{parameter.departmentId,jdbcType=INTEGER}
        </if>
        <if test="parameter.isEnable != null and parameter.isEnable != ''">
            and p.is_enable = #{parameter.isEnable,jdbcType=INTEGER}
        </if>
        <if test="parameter.type != null and parameter.type != ''">
            and p.type = #{parameter.type,jdbcType=SMALLINT}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>
    <select id="queryListAll" resultMap="BaseResultMap" parameterType="com.ahsj.hiscore.entity.HisProject">
        select
        p.* ,o.name as dept_name
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id
        where 1=1
        <foreach collection="list" separator="or" item="item" index="index">
            p.id=#{item.id}
        </foreach>

    </select>

    <select id="queryProject" resultMap="BaseResultMap">
        select
            h.*
        from  his_project  h  order by create_date desc limit = 1
    </select>


    <select id="queryCombinationId" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select his.id as combination_id, hip.id as inspection_id,
               his.name as combination_name ,his.number as combination_number ,hip.num as his_project_num ,hip.order_num as
                   his_project_order_num , hp.*
        from his_inspection_combination his left join his_inspec_project hip on his.id = hip.inspection_id
                                            left join his_project hp on hip.project_id = hp.id WHERE his.id = #{combinationId}

    </select>


    <select id="queryCombinationIds" resultMap="BaseResultMap" parameterType="core.entity.PageBean">
        select his.id as combination_id, hip.id as inspection_id,
        his.name as combination_name ,his.number as combination_number ,hip.num as his_project_num ,hip.order_num as
        his_project_order_num , hp.*
        from his_inspection_combination his left join his_inspec_project hip on his.id = hip.inspection_id
        left join his_project hp on hip.project_id = hp.id WHERE
        1=1 and his.id = #{parameter.combinationId}
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>

    </select>


    <!-- 自定义sql-->
    <select id="selectForTreatPlan" resultMap="BaseResultMap" parameterType="java.util.List">
        select his_project.*
        from his_project
        where
        1=1
        <foreach collection="array" open="or" separator="or" index="index" item="item">
            id = #{item,jdbcType=BIGINT}
        </foreach>
    </select>


    <select id="queryHisProjectByName" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project
        where name =#{name,jdbcType=VARCHAR}
    </select>

    <select id="queryHisProjectByNames" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project
        where name =#{name,jdbcType=VARCHAR}
    </select>

    <select id="queryProjectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project order by create_date desc
    </select>
    <select id="queryProjectDescIdAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project order by id desc
    </select>

    <select id="queryTranslateInfoByDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project as his
        where

        <![CDATA[ (DATE_FORMAT(his.update_date, '%Y-%m-%d') =  DATE_FORMAT( #{updateDate}, '%Y-%m-%d'))]]>

    </select>


    <select id="queryAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_project
    </select>

    <select id="queryLists" resultMap="BaseResultMap" parameterType="core.entity.PageBean">
        select
        p.* ,o.name as dept_name
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id
        where is_enable = 1
        <if test="parameter.name != null and parameter.name != ''">
            and p.name like concat('%', #{parameter.name,jdbcType=INTEGER},'%')
        </if>
        <if test="parameter.number != null and parameter.number != ''">
            and p.number like concat('%', #{parameter.number,jdbcType=VARCHAR},'%')
        </if>
        <if test="parameter.pinyinCode != null and parameter.pinyinCode != ''">
            and p.pinyin_code like concat('%', #{parameter.pinyinCode,jdbcType=INTEGER},'%')
        </if>
        <if test="parameter.type != null and parameter.type != ''">
            and p.type = #{parameter.type,jdbcType=INTEGER}
        </if>
        <if test="parameter.departmentId != null and parameter.departmentId != ''">
            and p.department_Id = #{parameter.departmentId,jdbcType=INTEGER}
        </if>
        <if test="parameter.isEnable != null and parameter.isEnable != ''">
            and p.is_enable = #{parameter.isEnable,jdbcType=INTEGER}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>


    <select id="queryAddList" resultMap="BaseResultMap" parameterType="core.entity.PageBean">
        select
        <include refid="Base_Column_List"/>
        from his_project
    </select>

    <select id="getHisProject" resultMap="BaseResultMap" parameterType="com.ahsj.hiscore.entity.HisProject">
        select
        <include refid="Base_Column_List"/>
        from his_project p where p.number = #{number,jdbcType=BIGINT}
    </select>

    <insert id="importHisProject" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.ahsj.hiscore.entity.HisProject">
        insert into his_project (id, create_date, create_user_id,
        update_date, update_user_id, name,
        description, type, price,
        number, pinyin_code, unit,
        department_id, is_enable,num)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.createDate,jdbcType=TIMESTAMP}, #{item.createUserId,jdbcType=BIGINT},
            #{item.updateDate,jdbcType=TIMESTAMP}, #{item.updateUserId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR},
            #{item.description,jdbcType=VARCHAR}, #{item.type,jdbcType=SMALLINT}, #{item.price,jdbcType=DECIMAL},
            #{item.number,jdbcType=VARCHAR}, #{item.pinyinCode,jdbcType=VARCHAR}, #{item.unit,jdbcType=VARCHAR},
            #{item.departmentId,jdbcType=BIGINT}, #{item.isEnable,jdbcType=INTEGER}, #{item.num,jdbcType=INTEGER})
        </foreach>
    </insert>

    <update id="updateHisProject" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update his_project
            <set>


                <if test="item.type != null">
                    type = #{item.type,jdbcType=SMALLINT},
                </if>
                <if test="item.price != null">
                    price = #{item.price,jdbcType=DECIMAL},
                </if>

                <if test="item.pinyinCode != null">
                    pinyin_code = #{item.pinyinCode,jdbcType=VARCHAR},
                </if>
                <if test="item.unit != null">
                    unit = #{item.unit,jdbcType=VARCHAR},
                </if>
                <if test="item.departmentId != null">
                    department_id = #{item.departmentId,jdbcType=BIGINT}
                </if>

            </set>
            where name = #{item.name}
        </foreach>
    </update>


    <select id="queryListExportAll" resultMap="BaseResultMap" parameterType="com.ahsj.hiscore.entity.HisProject">
        select
        p.* ,o.name as dept_name ,sys.`value` as assit_type_name ,sys.id as sys_code_id
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id LEFT JOIN

        (SELECT d.code,d.value,d.id from `his-userinfo`.sys_code c left JOIN `his-userinfo`.sys_code_detail d on c.id =
        d.type_id WHERE c.type = 'assit_project_type' ) as sys on p.type = sys.code

        where 1=1
        <if test="isEnable != null and isEnable != ''">
            and p.is_enable = #{isEnable,jdbcType=INTEGER}
        </if>
        <if test="pinyinCode != null and pinyinCode != ''">
            and p.pinyin_code = #{pinyinCode,jdbcType=INTEGER}
        </if>
        <if test="type != null and type != ''">
            and p.type = #{type,jdbcType=INTEGER}
        </if>
        <if test="name != null and name != ''">
            and p.name like concat('%', #{name,jdbcType=INTEGER},'%')
        </if>
        <if test="number != null and number != ''">
            and p.number = #{number,jdbcType=VARCHAR}
        </if>


    </select>

    <select id="queryListExportAndByIdsAll" resultMap="BaseResultMap" parameterType="java.util.List">
        select
        p.* ,o.name as dept_name ,sys.`value` as assit_type_name ,sys.id as sys_code_id
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id LEFT JOIN

        (SELECT d.code,d.value ,d.id from `his-userinfo`.sys_code c left JOIN `his-userinfo`.sys_code_detail d on c.id =
        d.type_id WHERE c.type = 'assit_project_type' ) as sys on p.type = sys.code
        where
        <foreach collection="list" separator="or" item="item" index="index">
            p.id=#{item.id}
        </foreach>
    </select>

    <select id="search" resultMap="BaseResultMap" parameterType="com.ahsj.hiscore.entity.HisProject">
        select
        p.* ,o.name as dept_name
        from his_project p left join `his-userinfo`.organization as o on p.department_id = o.id
        where 1=1
        <if test="name != null and name != ''">
            and p.name like concat('%', #{name,jdbcType=INTEGER},'%')
        </if>
        <if test="pinyinCode != null and pinyinCode != ''">
            and p.pinyin_code like concat('%', #{pinyinCode,jdbcType=INTEGER},'%')
        </if>
        <if test="isEnable != null and isEnable != ''">
            and p.is_enable = #{isEnable,jdbcType=INTEGER}
        </if>
    </select>

    <select id="queryHisProjectByNumber" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from his_project
        where number =#{number,jdbcType=VARCHAR}
    </select>

    <select id="selectForListForProjectByIds" resultMap="BaseResultMap">
        select his_project.*
from his_project
 where id in
        <foreach item="item" index="index" collection="array"
                 open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>
</mapper>