<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.hiscore.dao.HisPatientInfoMapper">
    <resultMap id="BaseResultMap" type="com.ahsj.hiscore.entity.HisPatientInfo">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="birthday" property="birthday" jdbcType="INTEGER"/>
        <result column="location" property="location" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="sex" property="sex" jdbcType="INTEGER"/>
        <result column="phonenumber" property="phonenumber" jdbcType="BIGINT"/>
        <result column="idcard" property="idcard" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="update_user_id" property="updateUserId" jdbcType="BIGINT"/>
        <result column="height" property="height" jdbcType="INTEGER"/>
        <result column="weight" property="weight" jdbcType="DOUBLE"/>
        <result column="is_married" property="isMarried" jdbcType="INTEGER"/>
        <result column="job" property="job" jdbcType="VARCHAR"/>
        <result column="chiefcomplaint" property="chiefcomplaint" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, name, birthday, location, age, phonenumber, idcard, remarks, create_date, update_date, 
    create_user_id, update_user_id, height, weight, is_married, job,sex
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from his_patient_info
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from his_patient_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.ahsj.hiscore.entity.HisPatientInfo">
    insert into his_patient_info (id, name, birthday, 
      location, age, phonenumber, 
      idcard, remarks, create_date, 
      update_date, create_user_id, update_user_id, 
      height, weight, is_married, 
      job,sex)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{birthday,jdbcType=INTEGER}, 
      #{location,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{phonenumber,jdbcType=BIGINT},
      #{idcard,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP},
      #{updateDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT},
      #{height,jdbcType=INTEGER}, #{weight,jdbcType=DOUBLE}, #{isMarried,jdbcType=INTEGER}, 
      #{job,jdbcType=VARCHAR},#{sex,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id"
            parameterType="com.ahsj.hiscore.entity.HisPatientInfo">
        insert into his_patient_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="birthday != null">
                birthday,
            </if>
            <if test="location != null">
                location,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="phonenumber != null">
                phonenumber,
            </if>
            <if test="idcard != null">
                idcard,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="height != null">
                height,
            </if>
            <if test="weight != null">
                weight,
            </if>
            <if test="isMarried != null">
                is_married,
            </if>
            <if test="job != null">
                job,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                #{birthday,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                #{location,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                #{age,jdbcType=INTEGER},
            </if>
            <if test="phonenumber != null">
                #{phonenumber,jdbcType=BIGINT},
            </if>
            <if test="idcard != null">
                #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="height != null">
                #{height,jdbcType=INTEGER},
            </if>
            <if test="weight != null">
                #{weight,jdbcType=DOUBLE},
            </if>
            <if test="isMarried != null">
                #{isMarried,jdbcType=INTEGER},
            </if>
            <if test="job != null">
                #{job,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                #{sex,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.hiscore.entity.HisPatientInfo">
        update his_patient_info
        <set>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="birthday != null">
                birthday = #{birthday,jdbcType=INTEGER},
            </if>
            <if test="location != null">
                location = #{location,jdbcType=VARCHAR},
            </if>
            <if test="age != null">
                age = #{age,jdbcType=INTEGER},
            </if>
            <if test="phonenumber != null">
                phonenumber = #{phonenumber,jdbcType=BIGINT},
            </if>
            <if test="idcard != null">
                idcard = #{idcard,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="height != null">
                height = #{height,jdbcType=INTEGER},
            </if>
            <if test="weight != null">
                weight = #{weight,jdbcType=DOUBLE},
            </if>
            <if test="isMarried != null">
                is_married = #{isMarried,jdbcType=INTEGER},
            </if>
            <if test="job != null">
                job = #{job,jdbcType=VARCHAR},
            </if>
            <if test="sex != null">
                sex = #{sex,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ahsj.hiscore.entity.HisPatientInfo">
    update his_patient_info
    set name = #{name,jdbcType=VARCHAR},
      birthday = #{birthday,jdbcType=INTEGER},
      location = #{location,jdbcType=VARCHAR},
      age = #{age,jdbcType=INTEGER},
      phonenumber = #{phonenumber,jdbcType=BIGINT},
      idcard = #{idcard,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      height = #{height,jdbcType=INTEGER},
      weight = #{weight,jdbcType=DOUBLE},
      is_married = #{isMarried,jdbcType=INTEGER},
      job = #{job,jdbcType=VARCHAR},
        sex = #{sex,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

    <!--自定义sql-->
    <!--根据身份证号查询-->
    <select id="selectByIdcard" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from his_patient_info
        where idcard = #{idcard,jdbcType=VARCHAR}
    </select>
    <select id="list" parameterType="core.entity.PageBean" resultMap="BaseResultMap">
        SELECT
        a.*
        FROM
        `his-rpac`.his_patient_info as a
        LEFT JOIN `his-rpac`.his_user_patient as b ON a.id = b.patient_id
        LEFT JOIN `his-userinfo`.user_info as c ON c.id = b.user_id
        where
        1= 1
        <if test="parameter.name != null and parameter.name != ''">
            and a.name like concat('%' #{parameter.name,jdbcType=VARCHAR},'%')
        </if>
        <if test="parameter.idcard != null and parameter.idcard != ''">
            and a.idcard like concat('%' #{parameter.idcard,jdbcType=VARCHAR},'%')
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>
    <select id="selectByMedicalRecordId" resultMap="BaseResultMap" parameterType="java.lang.String">
  select
   p.id, p.name, p.birthday, p.location, p.age, p.phonenumber, p.idcard, p.remarks,
   p.height, p.weight, p.sex,p.is_married,p.update_date,
   a.chiefcomplaint as chiefcomplaint,c.name as departmentName
   from his_patient_info as p
   LEFT JOIN his_medical_record as r on r.patient_id=p.id
   left join his_medical as a on a.record_id=r.id
   left join his_registered as b on p.id=b.patient_id
   left join `his-userinfo`.organization as c on c.id = b.department_id
  where r.medical_record_id= #{medicalRecordId,jdbcType=VARCHAR}
  </select>
    <select id="selectByRecordId" resultMap="BaseResultMap" parameterType="java.lang.String">
  select
   p.id, p.name, p.birthday, p.location, p.age, p.phonenumber, p.idcard, p.remarks,
   p.height, p.weight, p.sex,p.is_married,p.update_date,
   a.chiefcomplaint as chiefcomplaint,c.name as departmentName
   from his_patient_info as p
   LEFT JOIN his_medical_record as r on r.patient_id=p.id
   left join his_medical as a on a.record_id=r.id
   left join his_registered as b on p.id=b.patient_id
   left join `his-userinfo`.organization as c on c.id = b.department_id
  where r.registered_id= #{recordId,jdbcType=VARCHAR}
  </select>

    <select id="selectByAnkleDetailNumber" resultMap="BaseResultMap" parameterType="java.lang.String">
  select
  a.*,
  e.name as departmentName
   from his_patient_info as a
    LEFT JOIN his_ankle as b on b.patient_id=a.id
      LEFT JOIN his_ankle_detail as c on b.number=c.number
      LEFT JOIN his_hospital_manage as d on b.record_id = d.number
      LEFT JOIN `his-userinfo`.organization as e on d.department_id = e.id
  where c.number= #{number,jdbcType=VARCHAR}
  </select>

    <select id="hisPatientInfoList" parameterType="com.ahsj.hiscore.entity.HisPatientInfo"
            resultType="com.ahsj.hiscore.entity.HisPatientInfo">
        SELECT
        a.id, a.name, a.location, a.age, a.phonenumber, a.idcard,
        a.height, a.weight, a.is_married, a.sex,s.id as marriedId, d.id as sexId
        FROM
        his_patient_info as a
        LEFT JOIN `his-userinfo`.sys_code_detail as s on s.code = a.is_married
        LEFT JOIN `his-userinfo`.sys_code_detail as d on d.code = a.sex
        where s.type_id = (select id from `his-userinfo`.sys_code where type = 'is_married')
        and d.type_id = (select id from `his-userinfo`.sys_code where type = 'sex')
        <if test="name != null and name != ''">
            and a.name like concat('%' #{name,jdbcType=VARCHAR},'%')
        </if>
        <if test="idcard != null and idcard != ''">
            and a.idcard like concat('%' #{parameter.idcard,jdbcType=VARCHAR},'%')
        </if>
    </select>

    <select id="selectByIds" resultType="com.ahsj.hiscore.entity.HisPatientInfo">
        SELECT
        a.id, a.name, a.location, a.age, a.phonenumber, a.idcard,
        a.height, a.weight, a.is_married, a.sex,s.id as marriedId, d.id as sexId
        FROM
        his_patient_info as a
        LEFT JOIN `his-userinfo`.sys_code_detail as s on s.code = a.is_married
        LEFT JOIN `his-userinfo`.sys_code_detail as d on d.code = a.sex
        where s.type_id = (select id from `his-userinfo`.sys_code where type = 'is_married')
        and d.type_id = (select id from `his-userinfo`.sys_code where type = 'sex')
        and a.id in
        <foreach collection="array" item="id" index="index"
                 open="(" close=")" separator=",">
            #{id,jdbcType=BIGINT}
        </foreach>
    </select>

    <select id="hisPatientInfoAll" resultType="com.ahsj.hiscore.entity.HisPatientInfo">
        select
        <include refid="Base_Column_List"/>
        from his_patient_info
    </select>

    <insert id="importHisPatientInfo" useGeneratedKeys="true" keyProperty="id" parameterType="com.ahsj.hiscore.entity.HisPatientInfo">
        insert into his_patient_info (id, name,
      phonenumber,
        idcard, create_date,
        update_date, create_user_id, update_user_id,
        height, weight, is_married,age,
        sex,location)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.id,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR},#{item.phonenumber,jdbcType=BIGINT},
            #{item.idcard,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP},
            #{item.updateDate,jdbcType=TIMESTAMP}, #{item.createUserId,jdbcType=BIGINT},
            #{item.updateUserId,jdbcType=BIGINT},  #{item.height,jdbcType=INTEGER}, #{item.weight,jdbcType=DOUBLE}, #{item.isMarried,jdbcType=INTEGER},
            #{item.age,jdbcType=INTEGER},
            #{item.sex,jdbcType=INTEGER},
                #{item.location,jdbcType=VARCHAR})

        </foreach>
    </insert>
</mapper>