<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.hiscore.dao.HisConsumablesBuyplanMapper">
    <resultMap id="BaseResultMap" type="com.ahsj.hiscore.entity.HisConsumablesBuyplan">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="buyplan_id" property="buyplanId" jdbcType="BIGINT"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_user_id" property="updateUserId" jdbcType="BIGINT"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="person_in_charge" property="personInCharge" jdbcType="VARCHAR"/>
        <result column="expected_time" property="expectedTime" jdbcType="TIMESTAMP"/>
        <result column="budget" property="budget" jdbcType="DOUBLE"/>
        <result column="completion" property="completion" jdbcType="INTEGER"/>
        <result column="completion_time" property="completionTime" jdbcType="TIMESTAMP"/>
        <result column="actual_expenditure" property="actualExpenditure" jdbcType="DOUBLE"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, buyplan_id, create_user_id, create_date, update_user_id, update_date, person_in_charge, 
    expected_time, budget, completion, completion_time, actual_expenditure
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from his_consumables_buyplan
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from his_consumables_buyplan
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.ahsj.hiscore.entity.HisConsumablesBuyplan" useGeneratedKeys="true"
            keyProperty="id">
    insert into his_consumables_buyplan (id, buyplan_id, create_user_id, 
      create_date, update_user_id, update_date, 
      person_in_charge, expected_time, budget, 
      completion, completion_time, actual_expenditure
      )
    values (#{id,jdbcType=BIGINT}, #{buyplanId,jdbcType=BIGINT}, #{createUserId,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, #{updateDate,jdbcType=TIMESTAMP}, 
      #{personInCharge,jdbcType=VARCHAR}, #{expectedTime,jdbcType=TIMESTAMP}, #{budget,jdbcType=DOUBLE},
      #{completion,jdbcType=INTEGER}, #{completionTime,jdbcType=TIMESTAMP}, #{actualExpenditure,jdbcType=DOUBLE}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ahsj.hiscore.entity.HisConsumablesBuyplan" useGeneratedKeys="true"
            keyProperty="id">
        insert into his_consumables_buyplan
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="buyplanId != null">
                buyplan_id,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="personInCharge != null">
                person_in_charge,
            </if>
            <if test="expectedTime != null">
                expected_time,
            </if>
            <if test="budget != null">
                budget,
            </if>
            <if test="completion != null">
                completion,
            </if>
            <if test="completionTime != null">
                completion_time,
            </if>
            <if test="actualExpenditure != null">
                actual_expenditure,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="buyplanId != null">
                #{buyplanId,jdbcType=BIGINT},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="personInCharge != null">
                #{personInCharge,jdbcType=VARCHAR},
            </if>
            <if test="expectedTime != null">
                #{expectedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="budget != null">
                #{budget,jdbcType=DOUBLE},
            </if>
            <if test="completion != null">
                #{completion,jdbcType=INTEGER},
            </if>
            <if test="completionTime != null">
                #{completionTime,jdbcType=TIMESTAMP},
            </if>
            <if test="actualExpenditure != null">
                #{actualExpenditure,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.hiscore.entity.HisConsumablesBuyplan">
        update his_consumables_buyplan
        <set>
            <if test="buyplanId != null">
                buyplan_id = #{buyplanId,jdbcType=BIGINT},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="personInCharge != null">
                person_in_charge = #{personInCharge,jdbcType=VARCHAR},
            </if>
            <if test="expectedTime != null">
                expected_time = #{expectedTime,jdbcType=TIMESTAMP},
            </if>
            <if test="budget != null">
                budget = #{budget,jdbcType=DOUBLE},
            </if>
            <if test="completion != null">
                completion = #{completion,jdbcType=INTEGER},
            </if>
            <if test="completionTime != null">
                completion_time = #{completionTime,jdbcType=TIMESTAMP},
            </if>
            <if test="actualExpenditure != null">
                actual_expenditure = #{actualExpenditure,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ahsj.hiscore.entity.HisConsumablesBuyplan">
    update his_consumables_buyplan
    set buyplan_id = #{buyplanId,jdbcType=BIGINT},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      person_in_charge = #{personInCharge,jdbcType=VARCHAR},
      expected_time = #{expectedTime,jdbcType=TIMESTAMP},
      budget = #{budget,jdbcType=DOUBLE},
      completion = #{completion,jdbcType=INTEGER},
      completion_time = #{completionTime,jdbcType=TIMESTAMP},
      actual_expenditure = #{actualExpenditure,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>


    <!--自定义sql-->

    <select id="list" parameterType="core.entity.PageBean" resultMap="BaseResultMap">
        select
        his_consumables_buyplan.*
        from his_consumables_buyplan
        where
        1= 1
        <if test="parameter.personInCharge != null and parameter.personInCharge != ''">
            and person_in_charge like concat('%' #{parameter.personInCharge,jdbcType=VARCHAR},'%')
        </if>
        <if test="parameter.lowexpectedTime != null">
            and expected_time &gt;= #{parameter.lowexpectedTime,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.highexpectedTime != null">
            and expected_time &lt;=#{parameter.highexpectedTime,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.lowBudget != null and parameter.lowBudget != '' ">
            and budget &gt;= #{parameter.lowBudget,jdbcType=DOUBLE}
        </if>
        <if test="parameter.highBudget != null and parameter.highBudget != ''">
            and budget &lt;= #{parameter.highBudget,jdbcType=DOUBLE}
        </if>
        <if test="parameter.completion != null and parameter.completion != ''">
            and completion = #{parameter.completion,jdbcType=INTEGER}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>

    </select>


    <!--根据耗材编号查找-->
    <select id="selectByBuyplanId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    SELECT
      his_consumables_buyplan.*
    FROM
      his_consumables_buyplan
    where
      buyplan_id =#{buyplanId,jdbcType=BIGINT}
  </select>

    <!--批量插入list-->
    <insert id="insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT
            LAST_INSERT_ID()
        </selectKey>
        insert into his_consumables_buyplan (id, buyplan_id, create_user_id,
        create_date, update_user_id, update_date,
        person_in_charge, expected_time, budget,
        completion, completion_time, actual_expenditure)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            #{item.id,jdbcType=BIGINT}, #{item.buyplanId,jdbcType=BIGINT}, #{item.createUserId,jdbcType=BIGINT},
            #{item.createDate,jdbcType=TIMESTAMP}, #{item.updateUserId,jdbcType=BIGINT},
            #{item.updateDate,jdbcType=TIMESTAMP},
            #{item.personInCharge,jdbcType=VARCHAR}, #{item.expectedTime,jdbcType=TIMESTAMP},
            #{item.budget,jdbcType=DOUBLE},
            #{item.completion,jdbcType=INTEGER}, #{item.completionTime,jdbcType=TIMESTAMP},
            #{item.actualExpenditure,jdbcType=DOUBLE}
        </foreach>
    </insert>

    <select id="queryTranslateInfoByDate" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from his_consumables_buyplan as his
        where  <![CDATA[ (DATE_FORMAT(his.update_date, '%Y-%m-%d') =  DATE_FORMAT( #{updateDate}, '%Y-%m-%d'))]]>
    </select>

  <select id="queryAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
     from his_consumables_buyplan

  </select>
</mapper>