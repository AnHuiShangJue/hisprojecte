<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.hiscore.dao.HisRefundProjectMapper">
    <resultMap id="BaseResultMap" type="com.ahsj.hiscore.entity.HisRefundProject">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="record_number" property="recordNumber" jdbcType="VARCHAR"/>
        <result column="voucher" property="voucher" jdbcType="VARCHAR"/>
        <result column="patient_name" property="patientName" jdbcType="VARCHAR"/>
        <result column="refund_num" property="refundNum" jdbcType="INTEGER"/>
        <result column="record_project_id" property="recordProjectId" jdbcType="BIGINT"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="application_time" property="applicationTime" jdbcType="TIMESTAMP"/>
        <result column="create_user_id" property="createUserId" jdbcType="BIGINT"/>
        <result column="update_user_id" property="updateUserId" jdbcType="BIGINT"/>
        <result column="is_back" property="isBack" jdbcType="INTEGER"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
        <result column="number" property="number" jdbcType="VARCHAR"/>
        <result column="toll_record_number" property="tollRecordNumber" jdbcType="VARCHAR"/>
        <result column="is_review" property="isReview" jdbcType="INTEGER"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, record_number, voucher, patient_name, refund_num, record_project_id, create_date, 
    update_date, create_user_id, update_user_id, is_back, remarks,is_review,application_time,toll_record_number
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from his_refund_project
        where id = #{id,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from his_refund_project
    where id = #{id,jdbcType=BIGINT}
  </delete>
    <insert id="insert" parameterType="com.ahsj.hiscore.entity.HisRefundProject">
    insert into his_refund_project (id, record_number, voucher, 
      patient_name, refund_num, record_project_id, 
      create_date, update_date, create_user_id, 
      update_user_id, is_back, remarks,is_review,application_time
      )
    values (#{id,jdbcType=BIGINT}, #{recordNumber,jdbcType=VARCHAR}, #{voucher,jdbcType=VARCHAR}, 
      #{patientName,jdbcType=VARCHAR}, #{refundNum,jdbcType=INTEGER}, #{recordProjectId,jdbcType=BIGINT}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, 
      #{updateUserId,jdbcType=BIGINT}, #{isBack,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},#{isReview,jdbcType=INTEGER},#{applicationTime,jdbcType=TIMESTAMP}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.ahsj.hiscore.entity.HisRefundProject">
        insert into his_refund_project
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="recordNumber != null">
                record_number,
            </if>
            <if test="voucher != null">
                voucher,
            </if>
            <if test="patientName != null">
                patient_name,
            </if>
            <if test="refundNum != null">
                refund_num,
            </if>
            <if test="recordProjectId != null">
                record_project_id,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="createUserId != null">
                create_user_id,
            </if>
            <if test="updateUserId != null">
                update_user_id,
            </if>
            <if test="isBack != null">
                is_back,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
            <if test="isReview != null">
                is_review,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="recordNumber != null">
                #{recordNumber,jdbcType=VARCHAR},
            </if>
            <if test="voucher != null">
                #{voucher,jdbcType=VARCHAR},
            </if>
            <if test="patientName != null">
                #{patientName,jdbcType=VARCHAR},
            </if>
            <if test="refundNum != null">
                #{refundNum,jdbcType=INTEGER},
            </if>
            <if test="recordProjectId != null">
                #{recordProjectId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="isBack != null">
                #{isBack,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isReview != null">
                #{isReview,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.hiscore.entity.HisRefundProject">
        update his_refund_project
        <set>
            <if test="recordNumber != null">
                record_number = #{recordNumber,jdbcType=VARCHAR},
            </if>
            <if test="voucher != null">
                voucher = #{voucher,jdbcType=VARCHAR},
            </if>
            <if test="patientName != null">
                patient_name = #{patientName,jdbcType=VARCHAR},
            </if>
            <if test="refundNum != null">
                refund_num = #{refundNum,jdbcType=INTEGER},
            </if>
            <if test="recordProjectId != null">
                record_project_id = #{recordProjectId,jdbcType=BIGINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="createUserId != null">
                create_user_id = #{createUserId,jdbcType=BIGINT},
            </if>
            <if test="updateUserId != null">
                update_user_id = #{updateUserId,jdbcType=BIGINT},
            </if>
            <if test="isBack != null">
                is_back = #{isBack,jdbcType=INTEGER},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
            <if test="isReview != null">
                is_review = #{isReview,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.ahsj.hiscore.entity.HisRefundProject">
    update his_refund_project
    set record_number = #{recordNumber,jdbcType=VARCHAR},
      voucher = #{voucher,jdbcType=VARCHAR},
      patient_name = #{patientName,jdbcType=VARCHAR},
      refund_num = #{refundNum,jdbcType=INTEGER},
      record_project_id = #{recordProjectId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      is_back = #{isBack,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},is_review = #{isReview,jdbcType=INTEGER},
    where id = #{id,jdbcType=BIGINT}
  </update>


    <!--自定义SQL -->
    <insert id="saveForAppEdit" parameterType="list">
        insert into his_refund_project (id,record_number, voucher, patient_name, refund_num, record_project_id,
        create_date,
        update_date, create_user_id, update_user_id, is_back, remarks,is_review,application_time,toll_record_number)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.id,jdbcType=BIGINT}, #{item.recordNumber,jdbcType=VARCHAR}, #{item.voucher,jdbcType=VARCHAR},
            #{item.patientName,jdbcType=VARCHAR}, #{item.refundNum,jdbcType=INTEGER},
            #{item.recordProjectId,jdbcType=BIGINT},
            #{item.createDate,jdbcType=TIMESTAMP}, #{item.updateDate,jdbcType=TIMESTAMP},
            #{item.createUserId,jdbcType=BIGINT},
            #{item.updateUserId,jdbcType=BIGINT}, #{item.isBack,jdbcType=INTEGER}, #{item.remarks,jdbcType=VARCHAR},
             #{item.isReview,jdbcType=INTEGER},#{item.applicationTime,jdbcType=TIMESTAMP}, #{item.tollRecordNumber,jdbcType=VARCHAR}

            )
        </foreach>
    </insert>


    <select id="list" parameterType="core.entity.PageBean" resultMap="BaseResultMap">
        SELECT  distinct p.toll_record_number, p.record_number,p.patient_name,p.remarks,p.voucher,p.create_date,p.is_review
        from his_refund_project p where 1=1
        <if test="parameter.tollRecordNumber != null and parameter.tollRecordNumber != ''">
            and p.toll_record_number = #{parameter.tollRecordNumber,jdbcType=INTEGER}
        </if>
        <if test="parameter.recordNumber != null and parameter.recordNumber != ''">
            and p.record_number = #{parameter.recordNumber,jdbcType=INTEGER}
        </if>
        <if test="parameter.voucher != null and parameter.voucher != ''">
            and p.voucher = #{parameter.voucher,jdbcType=INTEGER}
        </if>
        <if test="parameter.patientName != null and parameter.patientName != ''">
            and p.patient_name = #{parameter.patientName,jdbcType=INTEGER}
        </if>
        <if test="parameter.consumablesDetailsCreateDate != null">
            and p.application_time &lt;= #{parameter.consumablesDetailsCreateDate,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.consumablesDetailsCreateDates != null">
            and p.application_time &gt;= #{parameter.consumablesDetailsCreateDates,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>


    <delete id="delete"  parameterType="java.util.List" >
        delete from his_refund_project where voucher in
        <foreach collection="vouchers" item="voucher" separator="," open="(" close=")">
            #{voucher}
        </foreach>
    </delete>

    <select id="queryRecordNumber" parameterType="java.lang.String" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from his_refund_project where  record_number = #{recordNumber}
    </select>


    <select id="queryHisRefundProject" parameterType="com.ahsj.hiscore.entity.HisRefundProject" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/>
         from his_refund_project as p where  p.record_number = #{recordNumber,jdbcType=INTEGER} and p.is_review = 1
    </select>


    <select id="queryHisRefundProjectVoucher" parameterType="com.ahsj.hiscore.entity.HisRefundProject" resultMap="BaseResultMap">
        select <include refid="Base_Column_List"/> from his_refund_project as p where  p.voucher = #{voucher,jdbcType=INTEGER}
    </select>


    <!--    批量更新-->
    <update id="updateByHisRefundProjectList" parameterType="list">
        update his_refund_project
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="is_review=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.isReview!=null">
                        when id=#{item.id} then #{item.isReview}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="item" index="index">
            id=#{item.id}
        </foreach>
    </update>
    <!--    批量更新-->
    <update id="updateByHisRefundProjectListBack" parameterType="list">
        update his_refund_project
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="is_back=case" suffix="end,">
                <foreach collection="list" item="item" index="index">
                    <if test="item.isBack!=null">
                        when id=#{item.id} then #{item.isBack}
                    </if>
                </foreach>
            </trim>
        </trim>
        where
        <foreach collection="list" separator="or" item="item" index="index">
            id=#{item.id}
        </foreach>
    </update>


    <select id="lists" parameterType="core.entity.PageBean" resultMap="BaseResultMap">
        SELECT  distinct  p.record_number,p.patient_name,p.remarks,p.voucher,p.create_date,p.is_review
        from his_refund_project p where p.is_review = 1
        <if test="parameter.recordNumber != null and parameter.recordNumber != ''">
            and p.record_number = #{parameter.recordNumber,jdbcType=INTEGER}
        </if>
        <if test="parameter.voucher != null and parameter.voucher != ''">
            and p.voucher = #{parameter.voucher,jdbcType=INTEGER}
        </if>
        <if test="parameter.consumablesDetailsCreateDate != null">
            and p.application_time &lt;= #{parameter.consumablesDetailsCreateDate,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.consumablesDetailsCreateDates != null">
            and p.application_time &gt;= #{parameter.consumablesDetailsCreateDates,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>


    <select id="pricelists" parameterType="core.entity.PageBean" resultMap="BaseResultMap">
        SELECT  distinct  p.record_number,p.patient_name,p.remarks,p.voucher,p.create_date,p.is_review
        from his_refund_project p  left join  his_toll_record t on t.medical_record_id = p.record_number  where p.is_review = 1 and p.is_back = 2 and  t.number = #{parameter.number,jdbcType=VARCHAR}
        <if test="parameter.recordNumber != null and parameter.recordNumber != ''">
            and p.record_number = #{parameter.recordNumber,jdbcType=INTEGER}
        </if>
        <if test="parameter.voucher != null and parameter.voucher != ''">
            and p.voucher = #{parameter.voucher,jdbcType=INTEGER}
        </if>
        <if test="parameter.consumablesDetailsCreateDate != null">
            and p.application_time &lt;= #{parameter.consumablesDetailsCreateDate,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.consumablesDetailsCreateDates != null">
            and p.application_time &gt;= #{parameter.consumablesDetailsCreateDates,jdbcType=TIMESTAMP}
        </if>
        <if test="parameter.orders != null and parameter.orders != ''">
            order by ${parameter.orders}
        </if>
    </select>
<!--    p.toll_record_number =#{tollRecordNumber,jdbcType=VARCHAR}-->
    <select id="queryHisRecordProject" resultMap="BaseResultMap" parameterType="com.ahsj.hiscore.entity.HisRefundProject">
        select <include refid="Base_Column_List"/> from his_refund_project p where
         p.is_back = #{isBack,jdbcType=INTEGER}
        <if test="tollRecordNumber != null and tollRecordNumber != ''">
            and p.toll_record_number = #{tollRecordNumber,jdbcType=INTEGER}
        </if>
        <if test="recordNumber != null and recordNumber != ''">
            and p.record_number = #{recordNumber,jdbcType=INTEGER}
        </if>
    </select>

</mapper>