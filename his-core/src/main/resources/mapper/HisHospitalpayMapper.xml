<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.hiscore.dao.HisHospitalpayMapper" >
  <resultMap id="BaseResultMap" type="com.ahsj.hiscore.entity.HisHospitalpay" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="amount_receivable" property="amountReceivable" jdbcType="DECIMAL" />
    <result column="paid_amount" property="paidAmount" jdbcType="DECIMAL" />
    <result column="retrieve_amount" property="retrieveAmount" jdbcType="DECIMAL" />
    <result column="hosptal_regist_id" property="hosptalRegistId" jdbcType="BIGINT" />
    <result column="deposit" property="deposit" jdbcType="DECIMAL" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
    <result column="type" property="type" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, amount_receivable, paid_amount, retrieve_amount, hosptal_regist_id, deposit, 
    create_user_id, create_date, update_user_id, update_date, type
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from his_hospitalpay
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from his_hospitalpay
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ahsj.hiscore.entity.HisHospitalpay" >
    insert into his_hospitalpay (id, amount_receivable, paid_amount, 
      retrieve_amount, hosptal_regist_id, deposit, 
      create_user_id, create_date, update_user_id, 
      update_date, type)
    values (#{id,jdbcType=BIGINT}, #{amountReceivable,jdbcType=DECIMAL}, #{paidAmount,jdbcType=DECIMAL}, 
      #{retrieveAmount,jdbcType=DECIMAL}, #{hosptalRegistId,jdbcType=BIGINT}, #{deposit,jdbcType=DECIMAL}, 
      #{createUserId,jdbcType=BIGINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateUserId,jdbcType=BIGINT}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{type,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ahsj.hiscore.entity.HisHospitalpay" >
    insert into his_hospitalpay
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="amountReceivable != null" >
        amount_receivable,
      </if>
      <if test="paidAmount != null" >
        paid_amount,
      </if>
      <if test="retrieveAmount != null" >
        retrieve_amount,
      </if>
      <if test="hosptalRegistId != null" >
        hosptal_regist_id,
      </if>
      <if test="deposit != null" >
        deposit,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="amountReceivable != null" >
        #{amountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="retrieveAmount != null" >
        #{retrieveAmount,jdbcType=DECIMAL},
      </if>
      <if test="hosptalRegistId != null" >
        #{hosptalRegistId,jdbcType=BIGINT},
      </if>
      <if test="deposit != null" >
        #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.hiscore.entity.HisHospitalpay" >
    update his_hospitalpay
    <set >
      <if test="amountReceivable != null" >
        amount_receivable = #{amountReceivable,jdbcType=DECIMAL},
      </if>
      <if test="paidAmount != null" >
        paid_amount = #{paidAmount,jdbcType=DECIMAL},
      </if>
      <if test="retrieveAmount != null" >
        retrieve_amount = #{retrieveAmount,jdbcType=DECIMAL},
      </if>
      <if test="hosptalRegistId != null" >
        hosptal_regist_id = #{hosptalRegistId,jdbcType=BIGINT},
      </if>
      <if test="deposit != null" >
        deposit = #{deposit,jdbcType=DECIMAL},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ahsj.hiscore.entity.HisHospitalpay" >
    update his_hospitalpay
    set amount_receivable = #{amountReceivable,jdbcType=DECIMAL},
      paid_amount = #{paidAmount,jdbcType=DECIMAL},
      retrieve_amount = #{retrieveAmount,jdbcType=DECIMAL},
      hosptal_regist_id = #{hosptalRegistId,jdbcType=BIGINT},
      deposit = #{deposit,jdbcType=DECIMAL},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      type = #{type,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>