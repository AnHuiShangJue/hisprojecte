<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.smartparkcore.dao.ActivityInfoMapper" >
  <resultMap id="BaseResultMap" type="com.ahsj.smartparkcore.entity.po.ActivityInfo" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="event_location" property="eventLocation" jdbcType="VARCHAR" />
    <result column="registration_deadline" property="registrationDeadline" jdbcType="DATE" />
    <result column="start_time" property="startTime" jdbcType="DATE" />
    <result column="end_time" property="endTime" jdbcType="DATE" />
    <result column="maximum_number" property="maximumNumber" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_enable" property="isEnable" jdbcType="INTEGER" />
    <result column="create_date" property="createDate" jdbcType="DATE" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="update_date" property="updateDate" jdbcType="DATE" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="enterprise_id" property="enterpriseId" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="is_public" property="isPublic" jdbcType="INTEGER" />
    <result column="is_review" property="isReview" jdbcType="INTEGER" />
    <result column="remarks" property="remarks" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, event_location, registration_deadline, start_time, end_time, maximum_number, 
    description, is_enable, create_date, create_user_id, update_date, update_user_id, is_review, remarks,
    enterprise_id, user_id, is_public
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from activity_info
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from activity_info
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ahsj.smartparkcore.entity.po.ActivityInfo" >
    insert into activity_info (id, name, event_location, 
      registration_deadline, start_time, end_time, 
      maximum_number, description, is_enable, 
      create_date, create_user_id, update_date, 
      update_user_id, enterprise_id, user_id, is_review, remarks,
      is_public)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{eventLocation,jdbcType=VARCHAR}, 
      #{registrationDeadline,jdbcType=DATE}, #{startTime,jdbcType=DATE}, #{endTime,jdbcType=DATE}, 
      #{maximumNumber,jdbcType=BIGINT}, #{description,jdbcType=VARCHAR}, #{isEnable,jdbcType=INTEGER}, 
      #{createDate,jdbcType=DATE}, #{createUserId,jdbcType=BIGINT}, #{updateDate,jdbcType=DATE}, 
      #{updateUserId,jdbcType=BIGINT}, #{enterpriseId,jdbcType=BIGINT}, #{userId,jdbcType=BIGINT}, #{isReview,jdbcType=INTEGER}, #{remarks,jdbcType=VARCHAR},
      #{isPublic,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.ahsj.smartparkcore.entity.po.ActivityInfo" >
    insert into activity_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="eventLocation != null" >
        event_location,
      </if>
      <if test="registrationDeadline != null" >
        registration_deadline,
      </if>
      <if test="startTime != null" >
        start_time,
      </if>
      <if test="endTime != null" >
        end_time,
      </if>
      <if test="maximumNumber != null" >
        maximum_number,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isEnable != null" >
        is_enable,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="enterpriseId != null" >
        enterprise_id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="isPublic != null" >
        is_public,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="eventLocation != null" >
        #{eventLocation,jdbcType=VARCHAR},
      </if>
      <if test="registrationDeadline != null" >
        #{registrationDeadline,jdbcType=DATE},
      </if>
      <if test="startTime != null" >
        #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        #{endTime,jdbcType=DATE},
      </if>
      <if test="maximumNumber != null" >
        #{maximumNumber,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=DATE},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=DATE},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null" >
        #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="isPublic != null" >
        #{isPublic,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.smartparkcore.entity.po.ActivityInfo" >
    update activity_info
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="eventLocation != null" >
        event_location = #{eventLocation,jdbcType=VARCHAR},
      </if>
      <if test="registrationDeadline != null" >
        registration_deadline = #{registrationDeadline,jdbcType=DATE},
      </if>
      <if test="startTime != null" >
        start_time = #{startTime,jdbcType=DATE},
      </if>
      <if test="endTime != null" >
        end_time = #{endTime,jdbcType=DATE},
      </if>
      <if test="maximumNumber != null" >
        maximum_number = #{maximumNumber,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isEnable != null" >
        is_enable = #{isEnable,jdbcType=INTEGER},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=DATE},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="enterpriseId != null" >
        enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="isPublic != null" >
        is_public = #{isPublic,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ahsj.smartparkcore.entity.po.ActivityInfo" >
    update activity_info
    set name = #{name,jdbcType=VARCHAR},
      event_location = #{eventLocation,jdbcType=VARCHAR},
      registration_deadline = #{registrationDeadline,jdbcType=DATE},
      start_time = #{startTime,jdbcType=DATE},
      end_time = #{endTime,jdbcType=DATE},
      maximum_number = #{maximumNumber,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      is_enable = #{isEnable,jdbcType=INTEGER},
      create_date = #{createDate,jdbcType=DATE},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_date = #{updateDate,jdbcType=DATE},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      enterprise_id = #{enterpriseId,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      is_review = #{isReview,jdbcType=INTEGER},
      remarks = #{remarks,jdbcType=VARCHAR},
      is_public = #{isPublic,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
<!--  自定义sql-->

  <resultMap id="BaseResultMapVO" type="com.ahsj.smartparkcore.entity.vo.ActivityInfoVO">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="event_location" jdbcType="VARCHAR" property="eventLocation" />
    <result column="registration_deadline" jdbcType="DATE" property="registrationDeadline" />
    <result column="start_time" jdbcType="DATE" property="startTime" />
    <result column="end_time" jdbcType="DATE" property="endTime" />
    <result column="maximum_number" jdbcType="BIGINT" property="maximumNumber" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="is_enable" jdbcType="INTEGER" property="isEnable" />
    <result column="is_public" jdbcType="INTEGER" property="isPublic" />
    <result column="is_review" jdbcType="INTEGER" property="isReview" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
  </resultMap>

  <select id="list" resultMap="BaseResultMapVO" parameterType="core.entity.PageBean">
    select
    activity_info.*
    from activity_info
    where
    1=1
    <if test="parameter.name != null ">
      and activity_info.name &gt;= #{parameter.name,jdbcType=VARCHAR}
    </if>
    <if test="parameter.orders != null and parameter.orders != ''">
      order by ${parameter.orders}
    </if>
  </select>
</mapper>