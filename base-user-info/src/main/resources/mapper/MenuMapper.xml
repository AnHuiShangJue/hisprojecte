<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ahsj.baseuserinfo.dao.MenuMapper" >
  <resultMap id="BaseResultMap" type="com.ahsj.baseuserinfo.entity.Menu" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="menu_id" property="menuId" jdbcType="VARCHAR" />
    <result column="menu_name" property="menuName" jdbcType="VARCHAR" />
    <result column="menu_url" property="menuUrl" jdbcType="VARCHAR" />
    <result column="tree_id" property="treeId" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="has_sub" property="hasSub" jdbcType="VARCHAR" />
    <result column="icon_cls" property="iconCls" jdbcType="VARCHAR" />
    <result column="open_type" property="openType" jdbcType="VARCHAR" />
    <result column="order_num" property="orderNum" jdbcType="INTEGER" />
    <result column="permission" property="permission" jdbcType="VARCHAR" />
    <result column="company_id" property="companyId" jdbcType="VARCHAR" />
    <result column="create_user_id" property="createUserId" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_user_id" property="updateUserId" jdbcType="VARCHAR" />
    <result column="service_name" property="serviceName" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, menu_id, menu_name, menu_url, tree_id, parent_id, has_sub, icon_cls, open_type, 
    order_num, permission, company_id, del_flag, create_user_id, create_date, update_user_id, 
    update_date,service_name
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from menu
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from menu
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.ahsj.baseuserinfo.entity.Menu" >
    insert into menu (id, menu_id, menu_name, 
      menu_url, tree_id, parent_id, 
      has_sub, icon_cls, open_type, 
      order_num, permission, company_id, 
      del_flag, create_user_id, create_date, 
      update_user_id, update_date,service_name)
    values (#{id,jdbcType=BIGINT}, #{menuId,jdbcType=VARCHAR}, #{menuName,jdbcType=VARCHAR}, 
      #{menuUrl,jdbcType=VARCHAR}, #{treeId,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, 
      #{hasSub,jdbcType=VARCHAR}, #{iconCls,jdbcType=VARCHAR}, #{openType,jdbcType=VARCHAR}, 
      #{orderNum,jdbcType=INTEGER}, #{permission,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{delFlag,jdbcType=VARCHAR}, #{createUserId,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}, #{serviceName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ahsj.baseuserinfo.entity.Menu" >
    insert into menu
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="menuId != null" >
        menu_id,
      </if>
      <if test="menuName != null" >
        menu_name,
      </if>
      <if test="menuUrl != null" >
        menu_url,
      </if>
      <if test="treeId != null" >
        tree_id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="hasSub != null" >
        has_sub,
      </if>
      <if test="iconCls != null" >
        icon_cls,
      </if>
      <if test="openType != null" >
        open_type,
      </if>
      <if test="orderNum != null" >
        order_num,
      </if>
      <if test="permission != null" >
        permission,
      </if>
      <if test="companyId != null" >
        company_id,
      </if>
      <if test="delFlag != null" >
        del_flag,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
      <if test="serviceName != null" >
        service_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="menuId != null" >
        #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null" >
        #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="hasSub != null" >
        #{hasSub,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="openType != null" >
        #{openType,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        #{permission,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceName != null" >
        #{serviceName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.ahsj.baseuserinfo.entity.Menu" >
    update menu
    <set >
      <if test="menuId != null" >
        menu_id = #{menuId,jdbcType=VARCHAR},
      </if>
      <if test="menuName != null" >
        menu_name = #{menuName,jdbcType=VARCHAR},
      </if>
      <if test="menuUrl != null" >
        menu_url = #{menuUrl,jdbcType=VARCHAR},
      </if>
      <if test="treeId != null" >
        tree_id = #{treeId,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="hasSub != null" >
        has_sub = #{hasSub,jdbcType=VARCHAR},
      </if>
      <if test="iconCls != null" >
        icon_cls = #{iconCls,jdbcType=VARCHAR},
      </if>
      <if test="openType != null" >
        open_type = #{openType,jdbcType=VARCHAR},
      </if>
      <if test="orderNum != null" >
        order_num = #{orderNum,jdbcType=INTEGER},
      </if>
      <if test="permission != null" >
        permission = #{permission,jdbcType=VARCHAR},
      </if>
      <if test="companyId != null" >
        company_id = #{companyId,jdbcType=VARCHAR},
      </if>
      <if test="delFlag != null" >
        del_flag = #{delFlag,jdbcType=VARCHAR},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
      <if test="serviceName != null" >
        service_name = #{serviceName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ahsj.baseuserinfo.entity.Menu" >
    update menu
    set menu_id = #{menuId,jdbcType=VARCHAR},
      menu_name = #{menuName,jdbcType=VARCHAR},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      tree_id = #{treeId,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      has_sub = #{hasSub,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      open_type = #{openType,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR},
      del_flag = #{delFlag,jdbcType=VARCHAR},
      create_user_id = #{createUserId,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      service_name =  #{serviceName,jdbcType=VARCHAR}


    where id = #{id,jdbcType=BIGINT}
  </update>

  <!-- 自定义 -->
  <resultMap id="TreeResultMap" type="com.ahsj.baseuserinfo.entity.TreeEntity">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="pId" jdbcType="VARCHAR" property="pId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="isParent" jdbcType="BOOLEAN" property="isParent" />
    <result column="open" jdbcType="BOOLEAN" property="open" />
    <result column="checked" jdbcType="BOOLEAN" property="checked" />
  </resultMap>
  <select id="selectTreeCode" parameterType="java.lang.String" resultMap="TreeResultMap">
    select
      tree_id as id,
      parent_id as pId,
      menu_name as name,
      case when has_sub = 0 then true else false end as isParent,
      false as open
    from menu
    where  parent_id = #{parameter.treeId,jdbcType=VARCHAR}
    order by order_num asc
  </select>
  <select id="list" parameterType="com.ahsj.baseuserinfo.entity.Menu" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from menu
    where  parent_id = #{parameter.parentId,jdbcType=VARCHAR}
    <if test="parameter.orders != null and parameter.orders != ''">
      order by ${parameter.orders}
    </if>
  </select>
  <select id="selectByMenuId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from menu
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </select>
  <update id="update" parameterType="com.ahsj.baseuserinfo.entity.Menu">
    update menu
    <set>
      menu_name = #{menuName,jdbcType=VARCHAR},
      menu_url = #{menuUrl,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      open_type = #{openType,jdbcType=VARCHAR},
      order_num = #{orderNum,jdbcType=INTEGER},
      permission = #{permission,jdbcType=VARCHAR},
      icon_cls = #{iconCls,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    </set>
    where menu_id = #{menuId,jdbcType=VARCHAR}
  </update>
  <update id="updateParent" parameterType="com.ahsj.baseuserinfo.entity.Menu">
    update menu
    <set>
      has_sub = #{hasSub,jdbcType=VARCHAR},
      update_user_id = #{updateUserId,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    </set>
    where tree_id = #{parentId,jdbcType=VARCHAR}
  </update>
  <!-- 取树同一层最大唯一标识 -->
  <select id="selectMaxTreeId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
      max(tree_id) as tree_id
    from menu
    where parent_id = #{parentId,jdbcType=VARCHAR}
  </select>
  <!-- 查询所有菜单树 -->
  <select id="listMenuTree" parameterType="com.ahsj.baseuserinfo.entity.Role" resultMap="TreeResultMap">
    select
    id,
    pId,
    name,
    isParent,
    open,
    checked
    from
    (
    select
    tree_id as id,
    parent_id as pId,
    menu_name as name,
    case when has_sub = 0 then true else false end as isParent,
    false as open,
    case when role_permission.id is null then false else true end as checked,
    menu.order_num
    from menu
    left join role_permission on menu.tree_id = role_permission.menu_tree_id
    and role_permission.role_id = #{id,jdbcType=BIGINT}
    <if test="companyId != 1">
      ,
      user_role,role,role_permission role_privilege
      where user_role.role_id = role.id
      and role_privilege.role_id = role.id
      and user_role.user_id = #{userId,jdbcType=BIGINT}
      and role_privilege.menu_tree_id = menu.tree_id
    </if>
    union all
    select
    menu_operate.permission as id,
    menu.tree_id as pId,
    operate.name as name,
    false as isParent,
    false as open,
    case when role_permission.id is null then false else true end as checked,
    operate.order_num
    from menu_operate left join  role_permission on menu_operate.permission = role_permission.menu_tree_id
    and role_permission.role_id = #{id,jdbcType=BIGINT},
    operate,
    menu
    <if test="companyId != 1">
      ,
      user_role,role,role_permission role_privilege
    </if>
    where menu_operate.menu_id = menu.id
    and menu_operate.operate_id = operate.id
    <if test="companyId != 1">
      and user_role.role_id = role.id
      and role_privilege.role_id = role.id
      and user_role.user_id = #{userId,jdbcType=BIGINT}
      and role_privilege.menu_tree_id = menu_operate.permission
    </if>
    ) a
    order by a.pId, a.order_num asc
  </select>

  <!-- 查询所有菜单树 -->
  <select id="listProjectMenuTree" parameterType="java.lang.String" resultMap="TreeResultMap">
    select
      a.id,
      a.pId,
      a.name,
      a.isParent,
      a.open,
      a.checked
    from (
           select
             tree_id as id,
             parent_id as pId,
             menu_name as name,
             case when has_sub = 0 then true else false end as isParent,
             false as open,
             case when duty_permission.id is null then false else true end as checked,
             menu.order_num as order_num
           from menu
                left join duty_permission on menu.tree_id = duty_permission.menu_tree_id
                                                and duty_permission.duty_id = #{dutyId,jdbcType=VARCHAR}
           where tree_id like concat("1001007","%")
           union all
           select
             menu_operate.permission as id,
             menu.tree_id as pId,
             operate.name as name,
             false as isParent,
             false as open,
             case when duty_permission.id is null then false else true end as checked,
             operate.order_num as order_num
           from menu_operate left join  duty_permission on menu_operate.permission = duty_permission.menu_tree_id
                                                                  and duty_permission.duty_id = #{dutyId,jdbcType=VARCHAR},
                                                                  operate,
                                                                  menu
           where menu_operate.menu_id = menu.id
             and menu_operate.operate_id = operate.id ) a
    order by a.id, a.order_num
  </select>
  <select id="listSysMenu" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select  distinct
      menu.*
    from menu ,
         user_role,
         role_permission,
         role
    where
      menu.tree_id = role_permission.menu_tree_id
      and menu.tree_id not like "1001022%"
      and role_permission.role_id = user_role.role_id
      and user_role.role_id = role.id
      and user_role.user_id = #{id,jdbcType=INTEGER}
    order by parent_id , order_num asc
  </select>
  <select id="listSysMenuGaoqi" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select  distinct
      menu.*
    from menu ,
         user_role,
         role_permission,
         role
    where
      menu.tree_id = role_permission.menu_tree_id
      and menu.tree_id like "10010220%"
      and role_permission.role_id = user_role.role_id
      and user_role.role_id = role.id
      and user_role.user_id = #{id,jdbcType=INTEGER}
    order by parent_id , order_num asc
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from
    menu
  </select>
</mapper>